#grep total bams/*flagstat | cut -f2 -d '/' | cut -f1 -d ' ' | sed 's/.bam.flagstat:/\t/' > depths.tsv

# Done manually
#cat samples.tsv | ~hdang/scripts/vlookup.py 0 depths.tsv 0 1 tumor.depth | ~hdang/scripts/vlookup.py 1 depths.tsv 0 1 normal.depth > samples.info.new.tsv

#( echo -e "r\ttumor\tnormal\ttumor.depth\ttumor.purity\tnormal.depth\tmix.target.depth\ttumor.target.depth\tnormal.target.depth\ttumor.r0\tnormal.r0\ttumor.r\tnormal.r"; cat samples.info.new.tsv | grep -v tumor | perl -ane '($t, $n, $tdp, $ndp, $tp) = @F; $tgdp = $ndp; if($tdp < $ndp){$tgdp=$tdp}; $tr0 = $tgdp/$tdp; $nr0=$tgdp/$ndp; foreach $r ((0.001,0.005,0.01,0.02,0.03,0.04,0.05,0.075,0.1,0.125,0.15,0.175,0.2,0.25,0.3)){$ttgdp=$tgdp*($r*(1/$tp)); $ntgdp=$tgdp-$ttgdp; $tr=$ttgdp/$tdp; $nr=$ntgdp/$ndp; print join("\t", $r, $t, $n, $tdp, $tp, $ndp, $tgdp, $ttgdp, $ntgdp, $tr0, $nr0, $tr, $nr), "\n"}' ) > downsample.calc.tsv
#( echo -e "r\ttumor\tnormal\ttumor.depth\ttumor.purity\tnormal.depth\tmix.target.depth\ttumor.target.depth\tnormal.target.depth\ttumor.r0\tnormal.r0\ttumor.r\tnormal.r"; cat samples.info.tsv | grep -v tumor | perl -ane '($t, $n, $tdp, $ndp, $tp) = @F; $tgdp = $ndp; if($tdp < $ndp){$tgdp=$tdp}; $tr0 = $tgdp/$tdp; $nr0=$tgdp/$ndp; foreach $r ((0.05,0.1,0.25)){$ttgdp=$tgdp*($r*(1/$tp)); $ntgdp=$tgdp-$ttgdp; $tr=$ttgdp/$tdp; $nr=$ntgdp/$ndp; print join("\t", $r, $t, $n, $tdp, $tp, $ndp, $tgdp, $ttgdp, $ntgdp, $tr0, $nr0, $tr, $nr), "\n"}' ) > downsample.calc.mini.tsv

iteration=$1
mkdir -p output/${iteration}
mkdir -p logs
cat downsample.calc.tsv | grep -v tumor | awk 'BEGIN{FS=OFS="\t"}{if($9>0){print}}' | cut -f1,2,3,12,13 | while read r t n tr nr; do TMPDIR="/tmp/$t-$n-$r-$RANDOM"; echo "LSF_DOCKER_PRESERVE_ENVIRONMENT=false bsub -g /jace.webster/max250 -J $t.$n.$r.down.${iteration} -oo logs/$t-$n-$r.downsample.${iteration}.log -R 'select[mem>15000] rusage[mem=15000]' -M 64000000 -q research-hpc -a 'docker(mgibio/dna-alignment)' /bin/bash -c 'mkdir $TMPDIR; /usr/bin/java -Xmx6g -jar /opt/picard-2.18.1/picard.jar DownsampleSam I=bams/$t.markdup-sorted.bam O=$TMPDIR/$t.down.bam P=$tr RANDOM_SEED='null'; /usr/bin/java -Xmx6g -jar /opt/picard-2.18.1/picard.jar DownsampleSam I=bams/$n.markdup-sorted.bam O=$TMPDIR/$n.down.bam P=$nr RANDOM_SEED='null'; /usr/bin/java -Xmx6g -jar /opt/picard-2.18.1/picard.jar MergeSamFiles I=$TMPDIR/$t.down.bam I=$TMPDIR/$n.down.bam O=$TMPDIR/$t-$n-$r.bam; /usr/bin/java -Xmx6g -jar /opt/picard-2.18.1/picard.jar AddOrReplaceReadGroups I=$TMPDIR/$t-$n-$r.bam O=output/${iteration}/$t-$n-$iteration-$r.bam RGLB=lib1 RGPL=illumina RGPU=unit1 RGSM=$t-$n-$r; /opt/samtools/bin/samtools index output/${iteration}/$t-$n-$iteration-$r.bam; /opt/samtools/bin/samtools flagstat $TMPDIR/$t.down.bam > output/${iteration}/$t-$n-$iteration-$r-tumor.flagstat; /opt/samtools/bin/samtools flagstat $TMPDIR/$n.down.bam > output/${iteration}/$t-$n-$iteration-$r-normal.flagstat; /opt/samtools/bin/samtools flagstat output/${iteration}/$t-$n-$iteration-$r.bam > output/${iteration}/$t-$n-$iteration-$r.flagstat'; rm -rf $TMPDIR"; done > submit-downsample.${iteration}.sh
